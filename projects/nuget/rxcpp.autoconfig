nuget {
    nuspec {
        id = rxcpp;
        version : 2.1.1;
        title: Reactive Extensions for C++;
        authors: {Microsoft Open Technologies Inc.};
        owners: {Microsoft Open Technologies Inc.};
        licenseUrl: "http://rxcpp.codeplex.com/license";
        projectUrl: "https://rxcpp.codeplex.com/";
        iconUrl: "http://go.microsoft.com/fwlink/?LinkId=261274";
        requireLicenseAcceptance:false;
        summary: "The Reactive Extensions (Rx) asynchronous programming library";
        description: @"The Reactive Extensions (Rx) is a library for composing asynchronous and event-based programs using observable sequences and operators. Operators are the asynchronous form of standard library algorithms and they operate on Observables instead of iterators. Using Rx, developers represent asynchronous data streams with Observables, query asynchronous data streams using operators, and parameterize the concurrency in the asynchronous data streams using Schedulers.
        Compiles for gcc, clang and VisualStudio on Linux, OSX and Windows.";
        releaseNotes: "bug fixes, blocking_observable, tracing hooks and new operators; subscribe_on/observe_on, repeat, skip, finally, group_by, window, retry, scope, start_with, first, last, count";
        copyright: Copyright 2014;
        tags: { RxCpp, RxC++, Rx, Reactive, Observable, Functional, native, nativepackage};
    };

    files {

        #defines {
            SDK_RX   = ..\..\;
        }
        include: { "${SDK_RX}Rx\v2\src\**\*" };
        docs: {  ${SDK_RX}AUTHORS.txt, ${SDK_RX}Rx\v2\license.txt, ${SDK_RX}Rx\v2\examples\**\* };
    }

    targets {
        Defines += HAS_RXCPP;
    }
}
